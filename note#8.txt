스트림: 데이터를 전송하는 소프트웨어 모듈, 입력, 출력 스트림으로 구분, 
입출력 스트림의 버퍼는 입력된 데이터를 프로그램으로 전달하기 전에 일시 저장, 키 입력 도중 수정 가능, 출력 장치로 보내기 전에 일시 저장, 
입력에서는 enter 키가 눌려야 전달됨, 출력에서는 스트림에 저장해놓고 flush, |n, 버퍼가 가득 차면 출력됨
ios 클래스는 입출력 스트림 클래스들의 기본 클래스로 스트림 입출력에 필요한 공통 함수와 상수, 멤버 변수를 선언하는 역할,
iostream은 문자 단위로 입출력을 동시에 할 수 있는 스트림 클래스
c++프로그램이 실행될 때 cin, cout, cerr, clog 같은 스트림이 자동으로 생성, 
ostream의 멤버 함수 ostream& put(char ch), ostream& write(char* str, int n), ostream& flush()는 각각 ch의 문자를 스트림에 출력, str 배열의 n개의 문자를 스트림에 출력, 스트림 버퍼에 있는 내용을 강제 출력함
int get()을 통해 입력 스트림에서 문자를 읽어 리턴, 
istream& get(char* s, int n) 읽는 도중 enter키를 만나면 읽기를 중단하고 리턴하게 되는데, 이때 프로그램이 무한 루프에 빠질 수 있어서 문자 1개를 스트림에서 읽어야함
istream& getline(char* s, int n, delim='|n') 은 delim에 지정된 문자를 만날 때가지 혹은 n-1개의 문자를 읽을 때까지 배열에 문자를 읽어 들이는 함수로, delim 매개 변수가 생략되면 엔터 키가 입력될 때까지 한 라인을 읽는다.
입력 문자 건너뛰기, 문자 개수 알아내기 등
포맷 입출력, 포맷 플래그, 포맷 함수, 조작자, 
포맷 플래그는 스트림에서 입출력 형식을 지정하기 위한 플래그, 플래그에는 다양한 종류가 존재
포맷 플래그를 세팅하는 멤버 함수도 존재하며 Long setf(Long flags) flags를 스트림의 포맷 플래그로 설정하고 이전 플래스를 리턴, Long unsetf(Long flags) flags에 설정된 값에 따라 스트림의 포맷 플래스를 해제하고 이전 플래스를 리턴한다. 
포맷 함수 활용에는 출력되는 필드의 너비를 설정하고 너비 값을 리턴하는, 빈칸을 미리 지정한 문자로 채워서 출력하도록 해서 미리 설정한 포맷을 출력할 수 있다. 
조작자는 함수인데, 항상 <<, >>, 연산자와 함께 사용됨, 매개 변수 없는 조작자와 매개 변수가 존재하는 조작자로 구분, 있는 조작자에서는 iomanip이 필요함
<<는 삽입 연산자. cout << p;가 가능하도록 <<를 작성하는 것도 가능
>>는 추출 연산자. 사용자가 >>연산자를 수정해 cin>>p;가 가능하도록 작성 가능, 
사용자 정의 조작자 작성 또한 가능.